{"version":3,"file":"static/js/56.92d2202f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://react-homework-template/./src/pages/accounts/profiles/css/profiles.module.css?8e08","pages/accounts/profiles/Profiles.jsx","path/to/profilesData|lazy|/^/.//profiles.*/.json$/|groupOptions: {}|namespace object"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport default {\"profilesContainer\":\"profiles_profilesContainer__H7jQk\",\"profilesContainer__filterBoard\":\"profiles_profilesContainer__filterBoard__IzFeu\",\"profilesContainer__filterBoard__ID\":\"profiles_profilesContainer__filterBoard__ID__-J-sT\",\"profilesContainer__filterBoard__ID__number\":\"profiles_profilesContainer__filterBoard__ID__number__98QFI\",\"profilesContainer__filterBoard__error\":\"profiles_profilesContainer__filterBoard__error__YsTF6\",\"profilesContainer__filterBoard__btn\":\"profiles_profilesContainer__filterBoard__btn__+m8Iw\",\"profilesContainer__filterBoard__inputBox\":\"profiles_profilesContainer__filterBoard__inputBox__Qdexz\",\"profilesContainer__filterBoard__inputBox__svg\":\"profiles_profilesContainer__filterBoard__inputBox__svg__5ctAW\",\"profilesContainer__filterBoard__inputBox__input\":\"profiles_profilesContainer__filterBoard__inputBox__input__Oextn\",\"profilesContainer__table\":\"profiles_profilesContainer__table__WQSul\",\"profilesContainer__table__tr__indentBgn\":\"profiles_profilesContainer__table__tr__indentBgn__Hvych\",\"profilesContainer__table__tr__th\":\"profiles_profilesContainer__table__tr__th__4FC7b\",\"profilesContainer__table__tr__indentEnd\":\"profiles_profilesContainer__table__tr__indentEnd__4Swjo\",\"profilesContainer__table__tr\":\"profiles_profilesContainer__table__tr__A7cm0\",\"profilesContainer__table__td\":\"profiles_profilesContainer__table__td__s44kv\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport css from './css/profiles.module.css';\nimport sprite from '../../../img/svg/sprite-icon.svg';\n\nconst Profiles = () => {\n  const itemsPerPage = 8;\n\n  const { accountId } = useParams();\n\n  const [profilesData, setProfilesData] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [jsonLoaded, setJsonLoaded] = useState(true);\n  const [totalPages, setTotalPages] = useState(\n    Math.ceil(profilesData.length / itemsPerPage)\n  );\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\n\n  useEffect(() => {\n    // Функция для загрузки файла JSON\n    const fetchProfilesData = async () => {\n      try {\n        // Динамический импорт файла JSON в зависимости от accountId\n        const { default: jsonData } = await import(\n          `../../../path/to/profilesData/profiles${accountId}.json`\n        );\n        setProfilesData(jsonData);\n        setJsonLoaded(true);\n      } catch (error) {\n        console.error('Error fetching profiles data:', error);\n        setJsonLoaded(false);\n      }\n    };\n\n    fetchProfilesData();\n  }, [accountId]);\n\n  let maxPageNumbersToShow;\n\n  const filteredAccounts = useMemo(() => {\n    return profilesData.filter(\n      row =>\n        row.profileId.toLowerCase().includes(filter.toLowerCase()) ||\n        row.country.toLowerCase().includes(filter.toLowerCase()) ||\n        row.marketplace.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [filter, profilesData]);\n\n  // Обновление totalPages\n  useEffect(() => {\n    const newTotalPages = Math.ceil(filteredAccounts.length / itemsPerPage);\n    setTotalPages(newTotalPages);\n  }, [filter, filteredAccounts, itemsPerPage]);\n\n  // Обновление currentPage\n  useEffect(() => {\n    if (currentPage > totalPages) {\n      setCurrentPage(1);\n    }\n  }, [currentPage, itemsPerPage, filteredAccounts, totalPages]);\n\n  // Функция для сортировки данных\n  const sortedData = sortConfig.key\n    ? [...filteredAccounts].sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      })\n    : filteredAccounts;\n\n  const displayItems = useMemo(() => {\n    return sortedData.slice(\n      (currentPage - 1) * itemsPerPage,\n      currentPage * itemsPerPage\n    );\n  }, [currentPage, itemsPerPage, sortedData]);\n\n  maxPageNumbersToShow = totalPages > 3 ? 4 : totalPages;\n\n  const handleClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const generatePageNumbers = () => {\n    const pageNumbers = [];\n    let startPage = currentPage - 2;\n    let endPage = currentPage + 1;\n\n    if (startPage <= 0) {\n      startPage = 1;\n      endPage = startPage + maxPageNumbersToShow - 1;\n    }\n\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = endPage - maxPageNumbersToShow + 1;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(i);\n    }\n\n    return pageNumbers;\n  };\n\n  const handleChangeName = event => {\n    setFilter(event.currentTarget.value);\n    setCurrentPage(1);\n  };\n\n  // Функция для изменения столбца сортировки и направления\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return (\n    <div className={css.profilesContainer}>\n      <div className={css.profilesContainer__filterBoard}>\n        <h1>Table Profiles</h1>\n        {jsonLoaded ? (\n          <p className={css.profilesContainer__filterBoard__ID}>\n            ID{' '}\n            <span className={css.profilesContainer__filterBoard__ID__number}>\n              {accountId}\n            </span>\n          </p>\n        ) : (\n          <p className={css.profilesContainer__filterBoard__error}>\n            Everything is fine. The site is working. I just haven't created a\n            JSON file for the row you clicked on in the Accounts table. I have\n            created a JSON file only for the first eight rows of the Accounts\n            table. Please click on the back button and then select one of the first eight lines.\n          </p>\n        )}\n        <Link to=\"/\">\n        <button type=\"button\" className={!jsonLoaded ? css.profilesContainer__filterBoard__btn : ''}>back</button>\n        </Link>\n        <div className={css.profilesContainer__filterBoard__inputBox}>\n          <svg\n            width=\"24\"\n            height=\"24\"\n            className={css.profilesContainer__filterBoard__inputBox__svg}\n          >\n            <use xlinkHref={`${sprite}#search`} />\n          </svg>\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={handleChangeName}\n            placeholder=\"Search\"\n            className={css.profilesContainer__filterBoard__inputBox__input}\n          />\n        </div>\n      </div>\n      <table className={css.profilesContainer__table}>\n        <thead>\n          <tr className={css.profilesContainer__table__tr}>\n            <th className={css.profilesContainer__table__tr__indentBgn}></th>\n            <th\n              className={css.profilesContainer__table__tr__th}\n              onClick={() => requestSort('profileId')}\n            >\n              profileId\n            </th>\n            <th\n              className={css.profilesContainer__table__tr__th}\n              onClick={() => requestSort('country')}\n            >\n              country\n            </th>\n            <th\n              className={css.profilesContainer__table__tr__th}\n              onClick={() => requestSort('marketplace')}\n            >\n              marketplace\n            </th>\n            <th className={css.profilesContainer__table__tr__indentEnd}></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {displayItems.map(filteredAccount => (\n            <tr key={filteredAccount.profileId}>\n              <td></td>\n              <td className={css.profilesContainer__table__td}>\n                {filteredAccount.profileId}\n              </td>\n              <td className={css.profilesContainer__table__td}>\n                {filteredAccount.country}\n              </td>\n              <td className={css.profilesContainer__table__td}>\n                {filteredAccount.marketplace}\n              </td>\n              <td></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <button\n          onClick={() => handleClick(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Назад\n        </button>\n        {currentPage > 3 && totalPages > 4 && (\n          <button onClick={() => handleClick(1)}>1</button>\n        )}\n        {currentPage > 3 && totalPages > 4 && <span>...</span>}\n        {generatePageNumbers().map(pageNumber => (\n          <button\n            key={pageNumber}\n            onClick={() => handleClick(pageNumber)}\n            style={{\n              backgroundColor: pageNumber === currentPage ? 'blue' : 'grey',\n            }}\n          >\n            {pageNumber}\n          </button>\n        ))}\n\n        {currentPage < totalPages - 1 && totalPages > 4 && <span>...</span>}\n        {currentPage < totalPages - 1 && totalPages > 4 && (\n          <button onClick={() => handleClick(totalPages)}>{totalPages}</button>\n        )}\n        <button\n          onClick={() => handleClick(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        >\n          Вперед\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profiles;\n","var map = {\n\t\"./profiles1e0700a2-5183-4291-85cc-2065a036a683.json\": [\n\t\t664,\n\t\t664\n\t],\n\t\"./profiles44dca67a-8e5a-4798-bf8e-b15efd4e1abd.json\": [\n\t\t453,\n\t\t453\n\t],\n\t\"./profiles6013bad0-750c-4691-8bc2-d8f2b43969c4.json\": [\n\t\t680,\n\t\t680\n\t],\n\t\"./profiles63ca02f9-d637-46b5-9237-f3b24425e029.json\": [\n\t\t719,\n\t\t719\n\t],\n\t\"./profilesa30f821b-4d25-4ff0-abdd-e340b3f0dd2b.json\": [\n\t\t286,\n\t\t286\n\t],\n\t\"./profilesea76146a-0b00-4b80-bc02-a8c822176712.json\": [\n\t\t996,\n\t\t996\n\t],\n\t\"./profilesea8ed3dc-2b68-4a53-905a-53ecb0adef33.json\": [\n\t\t225,\n\t\t225\n\t],\n\t\"./profilesed0263e8-59a5-4bf1-87e0-2bb88e53dc34.json\": [\n\t\t127,\n\t\t127\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 425;\nmodule.exports = webpackAsyncContext;"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","maxPageNumbersToShow","accountId","useParams","_useState","useState","_useState2","_slicedToArray","profilesData","setProfilesData","_useState3","_useState4","filter","setFilter","_useState5","_useState6","currentPage","setCurrentPage","_useState7","_useState8","jsonLoaded","setJsonLoaded","_useState9","Math","ceil","length","_useState10","totalPages","setTotalPages","_useState11","direction","_useState12","sortConfig","setSortConfig","useEffect","fetchProfilesData","fn","_ref","_regeneratorRuntime","_callee","_yield$import","jsonData","_context","prev","next","concat","sent","default","t0","console","stop","self","this","args","arguments","apply","err","undefined","filteredAccounts","useMemo","row","profileId","toLowerCase","includes","country","marketplace","newTotalPages","sortedData","_toConsumableArray","sort","a","b","displayItems","slice","handleClick","pageNumber","requestSort","_jsxs","className","css","children","_jsx","Link","to","type","width","height","xlinkHref","sprite","onChange","event","currentTarget","placeholder","onClick","map","filteredAccount","disabled","pageNumbers","startPage","endPage","i","push","generatePageNumbers","style","backgroundColor","webpackAsyncContext","req","__webpack_require__","o","e","Error","code","ids","id","t","keys","Object","module","exports"],"sourceRoot":""}