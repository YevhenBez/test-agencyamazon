{"version":3,"file":"static/js/619.baf84a04.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/accounts/css/accounts.module.css?e18c","pages/accounts/Accounts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"accountsContainer\":\"accounts_accountsContainer__6kphm\",\"accountsContainer__filterBoard\":\"accounts_accountsContainer__filterBoard__v11xm\",\"accountsContainer__filterBoard__inputBox\":\"accounts_accountsContainer__filterBoard__inputBox__aEaHd\",\"accountsContainer__filterBoard__inputBox__svg\":\"accounts_accountsContainer__filterBoard__inputBox__svg__UOzW-\",\"accountsContainer__filterBoard__inputBox__input\":\"accounts_accountsContainer__filterBoard__inputBox__input__GKoZn\",\"accountsContainer__table\":\"accounts_accountsContainer__table__Zfh6X\",\"accountsContainer__table__tr__indentBgn\":\"accounts_accountsContainer__table__tr__indentBgn__PJ3DX\",\"accountsContainer__table__tr__th\":\"accounts_accountsContainer__table__tr__th__+5k7P\",\"accountsContainer__table__tr__indentEnd\":\"accounts_accountsContainer__table__tr__indentEnd__lhq3T\",\"accountsContainer__table__tr\":\"accounts_accountsContainer__table__tr__9CY7i\",\"accountsContainer__table__td\":\"accounts_accountsContainer__table__td__YoKdd\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport listAccounts from '../../path/to/accounts.json';\nimport css from './css/accounts.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\n\nconst Accounts = () => {\n\n  const itemsPerPage = 8;\n\n  const [filter, setFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(\n    Math.ceil(listAccounts.length / itemsPerPage)\n  );\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\n\n  let maxPageNumbersToShow;\n\n  const filteredAccounts = useMemo(() => {\n    return listAccounts.filter(\n      row =>\n        row.id.toLowerCase().includes(filter.toLowerCase()) ||\n        row.email.toLowerCase().includes(filter.toLowerCase()) ||\n        row.authToken.toLowerCase().includes(filter.toLowerCase()) ||\n        row.creationDate.includes(filter)\n    );\n  }, [filter]);\n\n  // Обновление totalPages\n  useEffect(() => {\n    const newTotalPages = Math.ceil(filteredAccounts.length / itemsPerPage);\n    setTotalPages(newTotalPages);\n  }, [filter, filteredAccounts, itemsPerPage]);\n\n  // Обновление currentPage\n  useEffect(() => {\n    if (currentPage > totalPages) {\n      setCurrentPage(1);\n    }\n  }, [currentPage, itemsPerPage, filteredAccounts, totalPages]);\n\n    // Функция для сортировки данных\n  const sortedData = sortConfig.key ? [...filteredAccounts].sort((a, b) => {\n    if (a[sortConfig.key] < b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? -1 : 1;\n    }\n    if (a[sortConfig.key] > b[sortConfig.key]) {\n      return sortConfig.direction === 'ascending' ? 1 : -1;\n    }\n    return 0;\n  }) : filteredAccounts;\n\n  const displayItems = useMemo(() => {\n    return sortedData.slice(\n      (currentPage - 1) * itemsPerPage,\n      currentPage * itemsPerPage\n    );\n  }, [currentPage, itemsPerPage, sortedData]);\n\n\n\n  maxPageNumbersToShow = totalPages > 3 ? 4 : totalPages;\n\n  const handleClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const generatePageNumbers = () => {\n    const pageNumbers = [];\n    let startPage = currentPage - 2;\n    let endPage = currentPage + 1;\n\n    if (startPage <= 0) {\n      startPage = 1;\n      endPage = startPage + maxPageNumbersToShow - 1;\n    }\n\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = endPage - maxPageNumbersToShow + 1;\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pageNumbers.push(i);\n    }\n\n    return pageNumbers;\n  };\n\n  const handleChangeName = event => {\n    setFilter(event.currentTarget.value);\n    setCurrentPage(1);\n\n  };\n\n  // Функция для изменения столбца сортировки и направления\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n  \n  return (\n    <div className={css.accountsContainer}>\n      <div className={css.accountsContainer__filterBoard}>\n        <h1>Table Accounts</h1>\n        \n        <div className={css.accountsContainer__filterBoard__inputBox}>\n          <svg\n            width=\"24\"\n            height=\"24\"\n            className={css.accountsContainer__filterBoard__inputBox__svg}\n          >\n            <use xlinkHref={`${sprite}#search`} />\n          </svg>\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={handleChangeName}\n            placeholder=\"Search\"\n            className={css.accountsContainer__filterBoard__inputBox__input}\n          />\n        </div>\n      </div>\n      <table className={css.accountsContainer__table}>\n        <thead>\n          <tr className={css.accountsContainer__table__tr}>\n            <th className={css.accountsContainer__table__tr__indentBgn}></th>\n            <th className={css.accountsContainer__table__tr__th} onClick={() => requestSort('accountId')}>\n              accountId\n            </th>\n            <th className={css.accountsContainer__table__tr__th} onClick={() => requestSort('email')}>email</th>\n            <th className={css.accountsContainer__table__tr__th} onClick={() => requestSort('authToken')}>\n              authToken\n            </th>\n            <th className={css.accountsContainer__table__tr__th} onClick={() => requestSort('creationDate')}>creationDate</th>\n            <th className={css.accountsContainer__table__tr__indentEnd}></th>\n          </tr>\n        </thead>\n\n        <tbody>\n            {displayItems.map(filteredAccount => (\n              <tr key={filteredAccount.id} >                                \n                    <td></td>\n                    <td className={css.accountsContainer__table__td}>\n                      <Link to={`/profiles/${filteredAccount.id}`}>{filteredAccount.id}</Link>\n                    </td>\n                    <td className={css.accountsContainer__table__td}>\n                      <Link to={`/profiles/${filteredAccount.id}`}>{filteredAccount.email}</Link>\n                    </td>\n                    <td className={css.accountsContainer__table__td}>\n                      <Link to={`/profiles/${filteredAccount.id}`}>{filteredAccount.authToken}</Link>\n                    </td>\n                    <td className={css.accountsContainer__table__td}>\n                      <Link to={`/profiles/${filteredAccount.id}`}>{filteredAccount.creationDate}</Link>\n                    </td>\n                    <td></td>                                  \n              </tr>\n            ))}\n        </tbody>\n                \n      </table>\n      <div>\n        <button\n          onClick={() => handleClick(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Назад\n        </button>\n        {currentPage > 3 && totalPages > 4 && (\n          <button onClick={() => handleClick(1)}>1</button>\n        )}\n        {currentPage > 3 && totalPages > 4 && <span>...</span>}\n        {generatePageNumbers().map(pageNumber => (\n          <button\n            key={pageNumber}\n            onClick={() => handleClick(pageNumber)}\n            style={{\n              backgroundColor: pageNumber === currentPage ? 'blue' : 'grey',\n            }}\n          >\n            {pageNumber}\n          </button>\n        ))}\n\n        {currentPage < totalPages - 1 && totalPages > 4 && <span>...</span>}\n        {currentPage < totalPages - 1 && totalPages > 4 && (\n          <button onClick={() => handleClick(totalPages)}>{totalPages}</button>\n        )}\n        <button\n          onClick={() => handleClick(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        >\n          Вперед\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Accounts;\n"],"names":["maxPageNumbersToShow","_useState","useState","_useState2","_slicedToArray","filter","setFilter","_useState3","_useState4","currentPage","setCurrentPage","_useState5","Math","ceil","listAccounts","_useState6","totalPages","setTotalPages","_useState7","key","direction","_useState8","sortConfig","setSortConfig","filteredAccounts","useMemo","row","id","toLowerCase","includes","email","authToken","creationDate","useEffect","newTotalPages","length","sortedData","_toConsumableArray","sort","a","b","displayItems","slice","handleClick","pageNumber","requestSort","_jsxs","className","css","children","_jsx","width","height","xlinkHref","concat","sprite","type","value","onChange","event","currentTarget","placeholder","onClick","map","filteredAccount","Link","to","disabled","pageNumbers","startPage","endPage","i","push","generatePageNumbers","style","backgroundColor"],"sourceRoot":""}